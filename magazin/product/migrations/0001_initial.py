# Generated by Django 4.0.5 on 2022-07-26 15:15

import autoslug.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=120, verbose_name='Категория')),
                ('slug_category', autoslug.fields.AutoSlugField(editable=False, populate_from='category_name')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=255, verbose_name='Название товара')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='product_name')),
                ('gender', models.CharField(choices=[('Male', 'Мужчины'), ('Female', 'Женщины'), ('Unisex', 'Унисекс')], default='Unisex', max_length=120, verbose_name='Гендер')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price_now', models.IntegerField(blank=True, null=True, verbose_name='Цена в данный момент')),
                ('discounted_price', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2147483647)], verbose_name='Скидка')),
                ('full_price', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2147483647)], verbose_name='Цена')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Товаров в наличии')),
                ('status', models.CharField(choices=[('Have', 'Есть в наличии'), ('Havent', 'Временно отсутвует')], default='Havent', max_length=120, verbose_name='Статус товара')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=255, verbose_name='Название Бренда')),
                ('slug_brand', autoslug.fields.AutoSlugField(editable=False, populate_from='brand_name')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=255, unique=True, verbose_name='Цвет')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSizeSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_set_size', models.CharField(max_length=255, unique=True, verbose_name='Название набора размеров')),
                ('slug_set_size', autoslug.fields.AutoSlugField(editable=False, populate_from='name_set_size')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('set_size', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='product.productsizeset', verbose_name='Набор размеров')),
            ],
            options={
                'verbose_name': 'Product set size',
                'verbose_name_plural': 'Product sets size',
                'unique_together': {('set_size', 'slug_set_size')},
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, default='product/system_img/default.jpg', upload_to='product/%Y/%m/%d/', verbose_name='Фото')),
                ('products', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prodimg', to='product.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='brand_product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brand_product', to='product.productbrand', verbose_name='Бренд товара'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='category_product', to='product.category', verbose_name='Категория'),
        ),
        migrations.AddField(
            model_name='product',
            name='colors',
            field=models.ManyToManyField(blank=True, related_name='product_colors', to='product.productcolor', verbose_name='Цвета'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_set_size',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_set_size', to='product.productsizeset', verbose_name='Набор размеров'),
        ),
    ]
